#!/dis/sh -n
load std mpexpr

array1 = 404 468 454 440 416 469 409 470 452 465 495 479 495 493 448 465 477 466 498 497 410 499 429 495 421 462 450 439 444 420 482 448 440 436 488 456 457 449 427 461 414 474 440 461 467 441 426 445 407 424 442 417 476 423 412 449 486 415 489 430 435 471 430 475 460 470 484 417 419 411 479 485 485 471 498 404 412 424 401 419 401 495 488 429 419 401 478 457 416 419 439 403 443 469 430 403 439 414 420 410 425 451 447 462 423 445 419 435 469 420 407 422 468 495 451 487 496 430 496 464 401 435 419 444 404 450 499 495 464 420 405 442 471 452 456 446 497 427 434 418 400 441 441 468 436 492 407 485 474 403 401 476 490 421 472 446 423 472 441 439 444 498 433 467 450 490 414 499 469 448 469 469 441 410 437 477 455 496 414 429 451 416 457 441 489 482 487 464 454 480 403 498 478 437 465 480 479 431 479 448

array2 = 446 430 484 476 464 423 472 470 433 426 401 440 402 418 450 474 423 451 413 433 444 458 416 497 444 437 443 419 487 471 465 485 401 449 462 465 424 434 435 458 412 489 450 414 407 401 488 482 404 453 467 400 411 484 449 408 473 492 479 460 415 445 446 417 446 460 482 423 446 470 433 459 459 483 425 418 436 414 401 492 419 468 492 431 404 441 491 477 485 470 490 401 467 488 418 466 448 452 489 494 422 474 405 481 457 431 400 494 497 453 438 416 421 431 499 478 472 490 455 410 413 445 411 432 433 481 498 433 433 439 480 408 413 485 441 471 416 493 417 465 446 455 482 420 438 433 498 463 424 405 473 489 451 436 421 436 417 420 470 402 459 450 410 425 487 452 496 456 445 465 421 444 472 455 464 411 489 414 474 413 419 499 454 422 435 475 459 452 447 481 454 459 431 465 484 470 469 432 426 466

subfn factorial {
    ans = 1
    for i in ${expr 1 $1 seq} {
        ans = ${expr $ans $i '*'}
    }
    result = $ans
    if {~ $1 0} {
        result = 1
    }
}

subfn combination {
    result = ${expr ${factorial $1} ${factorial $2} ${factorial ${expr $1 $2 -}} '*' '/'}
    if {ntest ${expr $1 $2 '<'}} {
        result = 0;
    }
}

subfn calculate {
	if {ntest ${expr $1 $2 '<'} } {
		result = ${combination $2 $1}
	} {
		result = ${combination $1 $2}
	}
}

@parallel_begin
merge array1 array2 calculate output1
@parallel_end

for i in $output1 {
    echo $i
    #(first1 array1) = $array1
    #(first2 array2) = $array2
    #echo ${calculate $first1 $first2}
}
